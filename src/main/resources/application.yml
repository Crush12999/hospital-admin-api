server:
  # Jetty默认是非阻塞的，可以处理更多并发请求
  jetty:
    threads:
      # acceptors线程池接受HTTP请求
      acceptors: 4
      # selectors线程池负责处理HTTP消息协议数据包
      selectors: 8
      # worker线程池负责调用Web方法
      min: 8
      max: 200
  port: 8092
  servlet:
    context-path: /hospital-api

spring:
  profiles:
    active: dev

  datasource:
    driver-class-name: org.apache.phoenix.queryserver.client.Driver
    url: jdbc:phoenix:thin:url=http://192.168.31.221:8765;serialization=PROTOBUF
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      test-on-borrow: true
      test-while-idle: true
      max-active: 8
      min-idle: 4
      validation-query: SELECT 1

  servlet:
    multipart:
      enabled: true
      # 上传文件不能超过20M
      max-file-size: 20MB
      # HTTP 请求不能超过20M
      max-request-size: 20MB

  redis:
    database: 0
    host: 192.168.31.221
    port: 6379
    password: 123456
    jedis:
      pool:
        max-active: 1000
        max-wait: -1ms
        max-idle: 16
        min-idle: 8

  quartz:
    job-store-type: memory


# mybatis plus
mybatis-plus:
  mapper-locations: classpath*:/mapper/*.xml
  # 实体类扫描，多个package用逗号或者分号分隔
  type-aliases-package: com.sryzzz.hospital.db.entity
  global-config:
    # 数据库相关配置
    db-config:
      # 主键类型  AUTO:"数据库ID自增"
      id-type: AUTO
      # 逻辑已删除值(默认为 1)
      logic-delete-value: 1
      # 逻辑未删除值(默认为 0)
      logic-not-delete-value: 0
    banner: false
  # 原生配置
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false
    call-setters-on-nulls: true
    jdbc-type-for-null: 'null'
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

logging:
  level:
    root: info
    com.sryzzz.hospital.db.dao: warn
  pattern:
    console: "%d{yyyy/MM/dd HH:mm:ss}  %-5level  %msg%n"

sa-token:
  # HTTP 请求头中 token 的名称
  token-name: token
  # token有效期，单位s 默认30天, -1代表永不过期
  timeout: 2592000
  # token临时有效期 (指定时间内无操作就视为token过期) 单位: 秒
  activity-timeout: -1
  # 是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)
  is-share: false
  # token风格
  token-style: uuid
  # 读取 Cookie 中 Token
  isReadCookie: false
  # 是否输出操作日志
  is-log: false

minio:
  endpoint: http://192.168.31.221:9000
  access-key: root
  secret-key: abc123456

